@use 'sass:color';
@use 'sass:map';
@use 'sass:math';
@use 'sass:list';
@use 'functions';
@use 'variables';

@mixin mix-colors {
  @each $flavor, $color in variables.$palette {
    %#{$flavor} {
      @each $c in $color {
        $rgb: functions.raw(list.nth($c, 2));
        $hex: list.nth($c, 2);

        --ctp-#{list.nth($c, 1)}: #{$hex};
        --ctp-#{list.nth($c, 1)}-rgb: #{$rgb};
      }

      @each $accent in $flavor {
        $color-accent: map.get($color, 'lavender');
        $color-accent-green: map.get($color, 'green');
        $color-accent-mauve: map.get($color, 'mauve');
        $color-accent-pink: map.get($color, 'pink');

        --ctp-accent: #{$color-accent};
        --ctp-accent-h: #{math.round(color.hue($color-accent))};
        --ctp-accent-s: #{math.round(color.saturation($color-accent))};
        --ctp-accent-l: #{math.round(color.lightness($color-accent))};
        --ctp-accent-green: #{$color-accent-green};
        --ctp-accent-green-h: #{math.round(color.hue($color-accent-green))};
        --ctp-accent-green-s: #{math.round(color.saturation($color-accent-green))};
        --ctp-accent-green-l: #{math.round(color.lightness($color-accent-green))};
        --ctp-accent-mauve: #{$color-accent-mauve};
        --ctp-accent-mauve-h: #{math.round(color.hue($color-accent-mauve))};
        --ctp-accent-mauve-s: #{math.round(color.saturation($color-accent-mauve))};
        --ctp-accent-mauve-l: #{math.round(color.lightness($color-accent-mauve))};
        --ctp-accent-pink: #{$color-accent-pink};
        --ctp-accent-pink-h: #{math.round(color.hue($color-accent-pink))};
        --ctp-accent-pink-s: #{math.round(color.saturation($color-accent-pink))};
        --ctp-accent-pink-l: #{math.round(color.lightness($color-accent-pink))};
      }
    }
  }
}
